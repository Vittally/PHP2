<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>$title</title>
</head>
<body>
<h1>УРОК 1 </h1>
<?php
echo "<h3>1. Придумать класс, который описывает любую сущность из предметной области интернет-магазинов:
продукт, ценник, посылка и т.п.<br>
2. Описать свойства класса из п.1 (состояние).<br>
3. Описать поведение класса из п.1 (методы).<br>
4. Придумать наследников класса из п.1. Чем они будут отличаться?</h3>";

include "good_pen.class.php";
$good1 = new Good ("Штука1","500","Штуковины");
$good2 = new Good ("Штука2","300","Штуковины");
$pen1 = new Pen ("Ручка","10","Ручки","Синий");

echo $good1->show().'<br>'.$good2->show().'<br>'.$pen1->show();

echo "<h3>5. Дан код - Что он выведет на каждом шаге? Почему?</h3>";

class A {
    public function foo() {
        static $x = 0;
        echo ++$x;
    }
}
$a1 = new A();
$a2 = new A();
echo '$a1->foo() -  будет 1'."<br>".
     '$a2->foo() -  будет 2'."<br>".
     '$a1->foo() -  будет 3'."<br>".
     '$a2->foo() -  будет 4'."<br>".
    "Static задаёт только первоначальное значение \$x, и дальше при создании новых объектов не переопредляется";

echo "<h3>6. Немного изменим п.5 <br> Объясните результаты в этом случае.</h3>";

class B {
    public function foo() {
        static $x = 0;
        echo ++$x;
    }
}
class C extends B {
}
$a1 = new B();
$a2 = new C();
echo '$a1->foo() -  будет 1'."<br>".
    '$a2->foo() -  будет 1'."<br>".
    '$a1->foo() -  будет 2'."<br>".
    '$a2->foo() -  будет 2'."<br>".
    "Static задаёт первоначальное значение \$x, как для B, так и для С - и это разные объекты от разных классов";
?>
</body>
</html>